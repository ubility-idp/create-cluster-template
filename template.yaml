apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: create-microservices-project-template
  title: Create Microservices Project
  description: Creates a kubernetes cluster on Azure and configures it with an nginx ingress controller
  tags:
    - azure
    - kubernetes
    - aks
    - nginx
    - ssl
spec:
  owner: ibrahimnasri24@gmail.com
  type: infrastructure
  parameters:
    - title: Project Info
      required:
        - project_name
      properties:
        project_name:
          title: Project Name
          type: string
          description: Name of the project to be used in the software catalog
        description:
          title: Description
          type: string
          description: Describe what this project is for
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
              - User
    - title: Cluster
      required:
        - region_size
      properties:
        region_size:
          title: Name
          type: object
          ui:field: NodePoolSize
    - title: Choose a location
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
    - id: exportVals
      name: Export Ubility Config Values
      action: ubility:output:exportconfig
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          project_name: ${{ parameters.project_name }}
          description: ${{ parameters.description }}
          region: ${{ parameters.region_size.region }}
          size: ${{ parameters.region_size.size }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          owner: ${{ parameters.owner }}
          container_registry: ${{ steps.exportVals.output.container_registry }}
          resource_group: ${{ steps.exportVals.output.resource_group }}
          subscription_id: ${{ steps.exportVals.output.azure_subscription_id}}

    - id: applyTerraform
      name: Apply Terraform
      action: ubility:terraform:apply
      input:
        cluster_name: ${{ parameters.project_name | lower }}

    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ["github.com"]
        description: This is ${{ parameters.project_name }}
        repoUrl: ${{ parameters.repoUrl }}

    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
        catalogInfoPath: "/catalog-info.yaml"
        optional: true

  output:
    links:
      - title: Repository
        url: ${{ steps.publish.output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps.register.output.entityRef }}
